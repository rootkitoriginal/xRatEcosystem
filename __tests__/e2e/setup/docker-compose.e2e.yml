networks:
  xrat-e2e-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16
          gateway: 172.22.0.1
    name: xrat-e2e-network

volumes:
  e2e_mongodb_data:
  e2e_redis_data:

services:
  # MongoDB Database for E2E
  mongodb:
    image: mongo:7.0
    container_name: xrat-e2e-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: e2etestpass
      MONGO_INITDB_DATABASE: xrat_e2e
    networks:
      xrat-e2e-network:
        ipv4_address: 172.22.1.10
    volumes:
      - e2e_mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache for E2E
  redis:
    image: redis:7.2-alpine
    container_name: xrat-e2e-redis
    networks:
      xrat-e2e-network:
        ipv4_address: 172.22.1.20
    command: redis-server --appendonly yes --requirepass e2eredispass
    volumes:
      - e2e_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API for E2E
  backend:
    build:
      context: ../../../backend
      dockerfile: Dockerfile
      target: development
    container_name: xrat-e2e-backend
    environment:
      NODE_ENV: test
      PORT: 3000
      MONGODB_URI: mongodb://admin:e2etestpass@mongodb:27017/xrat_e2e?authSource=admin
      REDIS_URL: redis://:e2eredispass@redis:6379
      JWT_SECRET: e2e-test-jwt-secret-key
      JWT_ACCESS_EXPIRATION: 15m
      JWT_REFRESH_EXPIRATION: 7d
      CORS_ORIGIN: http://172.22.0.10,http://localhost:5173
      HOST: 172.22.1.30
    networks:
      xrat-e2e-network:
        ipv4_address: 172.22.1.30
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend for E2E
  frontend:
    build:
      context: ../../../frontend
      dockerfile: Dockerfile
      target: development
    container_name: xrat-e2e-frontend
    environment:
      VITE_API_URL: http://172.22.1.30:3000/api/v1
      VITE_WS_URL: ws://172.22.1.30:3000
      VITE_HOST_URL: http://172.22.0.10
      VITE_USE_MOCK_AUTH: false
      VITE_USE_MOCK_DATA: false
      VITE_USE_MOCK_WEBSOCKET: false
    networks:
      xrat-e2e-network:
        ipv4_address: 172.22.0.10
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 5
