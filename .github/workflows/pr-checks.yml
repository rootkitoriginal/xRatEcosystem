name: 'PR Checks'

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
      - develop

concurrency:
  group: '${{ github.workflow }}-pr-${{ github.event.pull_request.number }}'
  cancel-in-progress: true

jobs:
  branch-name-check:
    name: 'Check Branch Name'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Check branch name format'
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          echo "BRANCH_NAME=\"$BRANCH_NAME\""

          # Allow copilot-generated branches or standard prefixes
          if [[ "$BRANCH_NAME" =~ ^(copilot/|feature/|fix/|docs/|refactor/|test/|chore/) ]]; then
            echo "✅ Branch name is valid: $BRANCH_NAME"
            exit 0
          else
            echo "❌ Branch name must start with: copilot/, feature/, fix/, docs/, refactor/, test/, or chore/"
            echo "Current branch: $BRANCH_NAME"
            exit 1
          fi

  lint-backend:
    name: 'Lint Backend'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v4'

      - name: 'Setup Node.js'
        uses: 'actions/setup-node@v4'
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: 'Install dependencies'
        run: 'cd backend && npm ci'

      - name: 'Run ESLint'
        run: 'cd backend && npm run lint'

  lint-frontend:
    name: 'Lint Frontend'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v4'

      - name: 'Setup Node.js'
        uses: 'actions/setup-node@v4'
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: 'Install dependencies'
        run: 'cd frontend && npm ci'

      - name: 'Run ESLint'
        run: 'cd frontend && npm run lint'

  test-backend:
    name: 'Test Backend'
    runs-on: 'ubuntu-latest'
    services:
      mongodb:
        image: 'mongo:7'
        ports:
          - '27017:27017'
        env:
          MONGO_INITDB_ROOT_USERNAME: 'testuser'
          MONGO_INITDB_ROOT_PASSWORD: 'testpass'
      redis:
        image: 'redis:7-alpine'
        ports:
          - '6379:6379'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v4'

      - name: 'Setup Node.js'
        uses: 'actions/setup-node@v4'
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: 'Install dependencies'
        run: 'cd backend && npm ci'

      - name: 'Run tests'
        run: 'cd backend && npm test'
        env:
          NODE_ENV: 'test'
          MONGO_URI: 'mongodb://testuser:testpass@localhost:27017/xrat_test'
          REDIS_URL: 'redis://localhost:6379'

  test-frontend:
    name: 'Test Frontend'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v4'

      - name: 'Setup Node.js'
        uses: 'actions/setup-node@v4'
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: 'Install dependencies'
        run: 'cd frontend && npm ci'

      - name: 'Run tests'
        run: 'cd frontend && npm test'

  build-docker:
    name: 'Build Docker Images'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v4'

      - name: 'Set up Docker Buildx'
        uses: 'docker/setup-buildx-action@v3'

      - name: 'Build backend image'
        uses: 'docker/build-push-action@v5'
        with:
          context: './backend'
          push: false
          tags: 'xrat-backend:test'
          cache-from: 'type=gha'
          cache-to: 'type=gha,mode=max'

      - name: 'Build frontend image'
        uses: 'docker/build-push-action@v5'
        with:
          context: './frontend'
          push: false
          tags: 'xrat-frontend:test'
          cache-from: 'type=gha'
          cache-to: 'type=gha,mode=max'